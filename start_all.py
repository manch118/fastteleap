#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ FastAPI —Å–µ—Ä–≤–µ—Ä–∞ –∏ Telegram –±–æ—Ç–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
"""

import subprocess
import sys
import os
import time
from pathlib import Path


def ensure_env_file():
    """–°–æ–∑–¥–∞—ë—Ç .env —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∞–ª—å–Ω—ã–µ ENV –∏–∑ Render"""
    env_path = Path(".env")

    if not env_path.exists():
        print("‚öôÔ∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π –∏–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Render...")

        # –°–ø–∏—Å–æ–∫ –Ω—É–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        env_vars = [
            "BOT_TOKEN",
            "ADMIN_USER_ID",
            "WEB_APP_URL",
            "YOOKASSA_SHOP_ID",
            "YOOKASSA_SECRET_KEY"
        ]

        with open(env_path, "w", encoding="utf-8") as f:
            for var in env_vars:
                value = os.getenv(var, "")
                f.write(f"{var}={value}\n")

        print("‚úÖ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏–∑ Render Environment Variables.")
    else:
        print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω.")


def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å .env —Ñ–∞–π–ª–∞"""
    env_path = Path(".env")
    if not env_path.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    with open(env_path, "r", encoding="utf-8") as f:
        content = f.read()

    if "BOT_TOKEN=" not in content or "ADMIN_USER_ID=" not in content:
        print("‚ùå –í .env –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ!")
        return False

    print("OK: .env —Ñ–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
    return True


def start_fastapi_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç FastAPI —Å–µ—Ä–≤–µ—Ä"""
    print("üöÄ –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞...")
    try:
        process = subprocess.Popen([
            sys.executable, "-m", "uvicorn",
            "main:app",
            "--host", "0.0.0.0",
            "--port", "8000"
        ])
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ FastAPI —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return None


def start_telegram_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    try:
        process = subprocess.Popen([sys.executable, "bot.py"])
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞: {e}")
        return None


def main():
    print("–ó–∞–ø—É—Å–∫ Telegram Mini App —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π")
    print("=" * 50)

    # –°–æ–∑–¥–∞—ë–º .env –∏–∑ Render ENV
    ensure_env_file()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env
    if not check_env_file():
        return 1

    # –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI
    fastapi_process = start_fastapi_server()
    if not fastapi_process:
        return 1

    # –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å
    time.sleep(3)

    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞
    bot_process = start_telegram_bot()
    if not bot_process:
        fastapi_process.terminate()
        return 1

    print("\n‚úÖ –û–±–∞ —Å–µ—Ä–≤–∏—Å–∞ –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("üåê FastAPI —Å–µ—Ä–≤–µ—Ä: http://localhost:8000")
    print("üì± Telegram –±–æ—Ç: –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    print("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    print("\nüõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

    try:
        while True:
            if fastapi_process.poll() is not None:
                print("‚ùå FastAPI —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                break
            if bot_process.poll() is not None:
                print("‚ùå Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                break
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        if fastapi_process:
            fastapi_process.terminate()
        if bot_process:
            bot_process.terminate()
        print("‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

    return 0


if __name__ == "__main__":
    sys.exit(main())